{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/contacto/contacto.component.ts","webpack:///src/app/components/contacto/contacto.component.html","webpack:///src/app/services/data-db.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebaseConfig","declarations","imports","providers","bootstrap","ContactoComponent","dbData","contactoForm","createFormGroup","email","nombre","message","reset","saveMessage","value","onSaveForm","DataDbService","afs","contactoCollection","collection","newContacto","add","providedIn","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'form-r';\n}\n","<contactoForm></contactoForm>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { ContactoComponent } from './components/contacto/contacto.component';\nimport {AngularFireModule} from '@angular/fire';\nimport {AngularFirestoreModule} from '@angular/fire/firestore';\nimport {environment } from '../environments/environment';\nimport {DataDbService} from './services/data-db.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContactoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AngularFireModule.initializeApp(environment.firebaseConfig),\n    AngularFirestoreModule,\n    ReactiveFormsModule\n\n  ],\n  providers: [DataDbService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {DataDbService} from '../../services/data-db.service';\nimport {FormControl, FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'contactoForm',\n  templateUrl: './contacto.component.html',\n  styleUrls: ['./contacto.component.css']\n})\nexport class ContactoComponent implements OnInit {\n\ncreateFormGroup(){\n   \nreturn new FormGroup( {\n  email: new FormControl(''),\n  nombre: new FormControl(''),\n  message: new FormControl('')\n});\n}\n\n  contactoForm: FormGroup;\n  constructor(private dbData: DataDbService) {\n    this.contactoForm = this.createFormGroup();\n   }\n\n  ngOnInit(): void {\n  }\n\n  onResetForm(){\n    this.contactoForm.reset();\n  }\n\n  onSaveForm(){\n   \n  this.dbData.saveMessage(this.contactoForm.value);\n}\n}\n\n","<div class=\"form-container\">\n    <h1>USUARIO</h1>\n    <form [formGroup]=\"contactoForm\" (ngSubmit)= \"onSaveForm()\">\n        <input type =\"text\" formControlName=\"nombre\" placeholder=\"Tu nombre\">\n        <input type =\"text\" formControlName=\"email\" placeholder=\"Tu email\">\n        <textarea formControlName=\"message\" placeholder=\"Ingresa un mensaje\"></textarea>\n        <button type =\"submit\" class =\"btn-send\">Enviar</button>\n        </form>\n</div>\n","import { Injectable } from '@angular/core'; \nimport {AngularFirestore, AngularFirestoreCollection} from '@angular/fire/firestore';\nimport {Observable} from 'rxjs';\nimport  {MessageI} from '../models/message.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataDbService {\n  private contactoCollection: AngularFirestoreCollection<MessageI>;\n\n  constructor(private afs: AngularFirestore) {\n    this.contactoCollection = afs.collection<MessageI>('contactos');\n   }\n\n   saveMessage(newContacto: MessageI): void{\n     this.contactoCollection.add(newContacto);\n   }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n   firebaseConfig:  {\n    apiKey: \"AIzaSyDaIa87skYlO6wcG3aKKfeNVwUVltbkuq4\",\n    authDomain: \"formcontacto-d969d.firebaseapp.com\",\n    databaseURL: \"https://formcontacto-d969d.firebaseio.com\",\n    projectId: \"formcontacto-d969d\",\n    storageBucket: \"formcontacto-d969d.appspot.com\",\n    messagingSenderId: \"41471280346\",\n    appId: \"1:41471280346:web:1d888bc73d8f44a2ee91e3\",\n    measurementId: \"G-GLW86WX5ET\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}